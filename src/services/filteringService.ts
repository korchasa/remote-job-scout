/**
 * Filtering Service (FR-4: Filtering Stage 2)
 *
 * –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤—Ç–æ—Ä—É—é —Å—Ç–∞–¥–∏—é –º–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
 * —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –ø—Ä–∞–≤–∏–ª–∞–º. –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤,
 * —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫ —è–∑—ã–∫–∞–º –∏ –¥—Ä—É–≥–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.
 *
 * –û—Å–Ω–æ–≤–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å:
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ç–∞–¥–∏–∏ —Å–±–æ—Ä–∞
 * - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
 * - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏—á–∏–Ω –ø—Ä–æ–ø—É—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π
 * - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º—É–ª—å—Ç–∏-—Å—Ç–µ–π–¥–∂ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 *
 * –°–≤—è–∑–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
 * - MultiStageSearchOrchestrator: –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ—Å–ª–µ —Å–±–æ—Ä–∞
 * - FilteringStatsDashboard: –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ UI
 * - SettingsService: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
 */

import type { SearchRequest, Vacancy } from '../types/database.js';

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π
 * –°–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
 */
export interface FilteringResult {
  /** –£—Å–ø–µ—à–Ω–æ –ª–∏ –ø—Ä–æ—à–ª–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è */
  success: boolean;
  /** –í–∞–∫–∞–Ω—Å–∏–∏, –ø—Ä–æ—à–µ–¥—à–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é */
  filteredVacancies: Vacancy[];
  /** –í–∞–∫–∞–Ω—Å–∏–∏, –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∏–∑-–∑–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */
  skippedVacancies: Vacancy[];
  /** –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π */
  totalProcessed: number;
  /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—à–µ–¥—à–∏—Ö —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é */
  filteredCount: number;
  /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö */
  skippedCount: number;
  /** –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏—á–∏–Ω –ø—Ä–æ–ø—É—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */
  reasons: { [reason: string]: number };
  /** –û—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫—à–∏–µ –≤–æ –≤—Ä–µ–º—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */
  errors: string[];
}

/**
 * –°–µ—Ä–≤–∏—Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –ø—Ä–∞–≤–∏–ª–∞–º
 *
 * –†–µ–∞–ª–∏–∑—É–µ—Ç FR-4: Filtering (Stage 2) - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ—Å–ª–µ —Å–±–æ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–π.
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.
 */
export class FilteringService {
  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   *
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ FR-4, –∫–æ—Ç–æ—Ä—ã–π:
   * 1. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∂–¥—É—é –≤–∞–∫–∞–Ω—Å–∏—é —á–µ—Ä–µ–∑ —Å–µ—Ä–∏—é —Ñ–∏–ª—å—Ç—Ä–æ–≤
   * 2. –°–æ–±–∏—Ä–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏—á–∏–Ω –ø—Ä–æ–ø—É—Å–∫–∞
   * 3. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –ø—Ä–æ—à–µ–¥—à–∏—Ö/–ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π
   *
   * @param vacancies - –°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
   * @param settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
   * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
   */
  filterVacancies(vacancies: Vacancy[], settings: SearchRequest['settings']): FilteringResult {
    const result: FilteringResult = {
      success: true,
      filteredVacancies: [],
      skippedVacancies: [],
      totalProcessed: vacancies.length,
      filteredCount: 0,
      skippedCount: 0,
      reasons: {},
      errors: [],
    };

    try {
      console.log(`üîç Starting filtering of ${vacancies.length} vacancies`);

      for (const vacancy of vacancies) {
        const filterResult = this.shouldIncludeVacancy(vacancy, settings);

        if (filterResult.include) {
          result.filteredVacancies.push({
            ...vacancy,
            status: 'filtered',
            filtered_at: new Date().toISOString(),
          });
          result.filteredCount++;
        } else {
          result.skippedVacancies.push({
            ...vacancy,
            status: 'skipped',
            skip_reason: filterResult.reason,
            filtered_at: new Date().toISOString(),
          });
          result.skippedCount++;

          // –°—á–∏—Ç–∞–µ–º –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞
          const reason = filterResult.reason ?? 'unknown';
          result.reasons[reason] = (result.reasons[reason] ?? 0) + 1;
        }
      }

      console.log(
        `‚úÖ Filtering completed: ${result.filteredCount} passed, ${result.skippedCount} skipped`,
      );

      if (Object.keys(result.reasons).length > 0) {
        console.log('üìä Skip reasons:', result.reasons);
      }

      return result;
    } catch (error) {
      result.success = false;
      result.errors.push((error as Error).message);
      console.error('‚ùå Filtering failed:', error);
      return result;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ–ª–∂–Ω–∞ –ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
   *
   * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å–µ—Ä–∏—é —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞:
   * 1. –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
   * 2. –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
   * 3. –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
   * 4. –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç—Ä–∞–Ω–∞–º (whitelist)
   * 5. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —è–∑—ã–∫–∞–º
   *
   * @param vacancy - –í–∞–∫–∞–Ω—Å–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @param settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
   * @returns –û–±—ä–µ–∫—Ç —Å —Ä–µ—à–µ–Ω–∏–µ–º –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∏ –ø—Ä–∏—á–∏–Ω–æ–π –ø—Ä–æ–ø—É—Å–∫–∞
   */
  private shouldIncludeVacancy(
    vacancy: Vacancy,
    settings: SearchRequest['settings'],
  ): { include: boolean; reason?: string } {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–π
    if (this.isCompanyBlacklisted(vacancy, settings.filters.blacklistedCompanies)) {
      return { include: false, reason: 'company_blacklisted' };
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
    if (this.containsBlacklistedWords(vacancy.title, settings.filters.blacklistedWordsTitle)) {
      return { include: false, reason: 'title_blacklisted_words' };
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
    if (
      this.containsBlacklistedWords(
        vacancy.description,
        settings.filters.blacklistedWordsDescription,
      )
    ) {
      return { include: false, reason: 'description_blacklisted_words' };
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
    if (!this.matchesCountryFilter(vacancy, settings.filters.countries || [])) {
      return { include: false, reason: 'country_filter' };
    }

    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —è–∑—ã–∫–∞–º
    if (!this.matchesLanguageRequirements(vacancy, settings.filters.languages)) {
      return { include: false, reason: 'language_requirements' };
    }

    return { include: true };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∫–æ–º–ø–∞–Ω–∏—è –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
   *
   * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–∏
   * –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –ª—é–±—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ (–±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞).
   *
   * @param vacancy - –í–∞–∫–∞–Ω—Å–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @param blacklistedCompanies - –ú–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–æ–º–ø–∞–Ω–∏–π –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
   * @returns true –µ—Å–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
   */
  private isCompanyBlacklisted(vacancy: Vacancy, blacklistedCompanies: string[]): boolean {
    if (!blacklistedCompanies || blacklistedCompanies.length === 0) {
      return false;
    }

    const vacancyData = this.parseVacancyData(vacancy);
    const companyName =
      typeof vacancyData.company === 'string' ? vacancyData.company.toLowerCase() : '';

    return blacklistedCompanies.some((blacklisted) =>
      companyName.includes(blacklisted.toLowerCase()),
    );
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ
   *
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞.
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –æ–ø–∏—Å–∞–Ω–∏—é –≤–∞–∫–∞–Ω—Å–∏–π.
   *
   * @param text - –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏)
   * @param blacklistedWords - –ú–∞—Å—Å–∏–≤ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
   * @returns true –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
   */
  private containsBlacklistedWords(text: string, blacklistedWords: string[]): boolean {
    if (!blacklistedWords || blacklistedWords.length === 0) {
      return false;
    }

    const lowerText = text.toLowerCase();
    return blacklistedWords.some((word) => lowerText.includes(word.toLowerCase()));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞–º –ø–æ —Å—Ç—Ä–∞–Ω–∞–º (whitelist)
   *
   * –†–µ–∞–ª–∏–∑—É–µ—Ç whitelist-–ø–æ–¥—Ö–æ–¥: –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã,
   * –≤–∞–∫–∞–Ω—Å–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–π –∏–∑ –Ω–∏—Ö.
   * –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π - —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã.
   *
   * @param vacancy - –í–∞–∫–∞–Ω—Å–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @param allowedCountries - –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω (whitelist)
   * @returns true –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ whitelist –∏–ª–∏ whitelist –ø—É—Å—Ç–æ–π
   */
  private matchesCountryFilter(vacancy: Vacancy, allowedCountries: string[]): boolean {
    if (!allowedCountries || allowedCountries.length === 0) {
      return true; // If no countries specified, allow all
    }

    const vacancyCountry = vacancy.country?.toLowerCase() ?? '';

    // Check if vacancy country is in the whitelist
    return allowedCountries.some((allowedCountry) =>
      vacancyCountry.includes(allowedCountry.toLowerCase()),
    );
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫ —è–∑—ã–∫–∞–º
   *
   * –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –≤ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö
   * –∏ –∏—â–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏.
   *
   * –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π –≤–ª–∞–¥–µ–Ω–∏—è.
   *
   * @param vacancy - –í–∞–∫–∞–Ω—Å–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @param languageRequirements - –ú–∞—Å—Å–∏–≤ —è–∑—ã–∫–æ–≤—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Å —É—Ä–æ–≤–Ω–µ–º
   * @returns true –µ—Å–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
   */
  private matchesLanguageRequirements(
    vacancy: Vacancy,
    languageRequirements: Array<{ language: string; level: string }>,
  ): boolean {
    if (!languageRequirements || languageRequirements.length === 0) {
      return true;
    }

    // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã - –µ—Å–ª–∏ –µ—Å—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —è–∑—ã–∫–∞–º, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ
    // –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É –∞–Ω–∞–ª–∏–∑–∞ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏
    const hasEnglishRequirement = languageRequirements.some(
      (req) => req.language.toLowerCase() === 'english',
    );

    if (hasEnglishRequirement) {
      const text = (vacancy.title + ' ' + vacancy.description).toLowerCase();
      // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–∏–π –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
      return text.includes('english') || text.includes('fluent') || text.includes('proficient');
    }

    return true;
  }

  /**
   * –ü–∞—Ä—Å–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏–∑ JSON
   *
   * –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–∞—Ä—Å–∏—Ç JSON-—Å—Ç—Ä–æ–∫—É –∏–∑ –ø–æ–ª—è vacancy.data.
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã.
   *
   * @param vacancy - –í–∞–∫–∞–Ω—Å–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
   * @returns –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
   */
  private parseVacancyData(vacancy: Vacancy): Record<string, unknown> {
    try {
      // –ü–∞—Ä—Å–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏, —Ö—Ä–∞–Ω—è—â–∏–µ—Å—è –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
      return vacancy.data ? JSON.parse(vacancy.data) : {};
    } catch {
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
      return {};
    }
  }
}
